class GameData{
    constructor(len, speed, movedX, movedY, x, y, currentDirection, wishedDirection){
        this.len                = len
        this.speed              = speed
        this.movedX             = movedX
        this.movedY             = movedY
        this.x                  = x
        this.y                  = y
        this.currentDirection   = currentDirection
        this.wishedDirection    = wishedDirection
        
        // this.FIRST_POINT_X = pacStyleLeft - 1233//corner of map
        // this.FIRST_POINT_Y = pacStyleTop - 1322.5 //corner of map
        // this.FIRST_GHOST_X = pacStyleLeft - 91*3
        // this.FIRST_GHOST_Y = pacStyleTop + 89.4
        // this.leftToEat = 'many'
        this.grid               = [ //h30w31
            [" " ," " ," " ," " ," " ," " ," " ,"G1","A" ,"A" ,"A" ,"A" ,"A" ,"G2","P1","G1","A" ,"A" ,"A" ,"A" ,"A" ,"G2"," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"G1","A" ,"A" ,"A" ,"A" ,"K" ,"O" ,"K" ,"A" ,"A" ,"A" ,"A" ,"G2","B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"G4","A" ,"A" ,"P" ,"A" ,"G2","B" ,"G1","A" ,"P" ,"A" ,"A" ,"G3","B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"L" ,"A" ,"A" ,"G2","L" ,"G2","B" ,"B" ,"B" ,"G1","R" ,"G1","A" ,"A" ,"R" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"G1","G2","B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"G1","G2","B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"G3","B" ,"G4","R" ,"B" ,"B" ,"B" ,"B" ,"B" ," " ," " ," " ," " ," " ," " ," " ],
            ["G1","A" ,"A" ,"A" ,"A" ,"G2","G1","K" ,"G3","B" ,"B" ,"B" ,"G4","A" ,"O" ,"A" ,"G3","B" ,"B" ,"B" ,"G4","K" ,"G2","G1","A" ,"A" ,"A" ,"A" ,"G2"],
            ["B" ,"G1","A" ,"A" ,"G2","B" ,"B" ,"G1","A" ,"G3","G4","K" ,"P" ,"G2","B" ,"G1","P" ,"K" ,"G3","G4","A" ,"G2","B" ,"B" ,"G1","A" ,"A" ,"G2","B" ],
            ["B" ,"L" ,"A" ,"G2","B" ,"B" ,"B" ,"B" ,"G1","A" ,"A" ,"G2","B" ,"B" ,"B" ,"B" ,"B" ,"G1","A" ,"A" ,"G2","B" ,"B" ,"B" ,"B" ,"G1","A" ,"R" ,"B" ],
            ["B" ,"L" ,"G2","B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"A" ,"A" ,"R" ,"B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"A" ,"A" ,"R" ,"B" ,"B" ,"B" ,"B" ,"B" ,"G1","R" ,"B" ],
            ["B" ,"B" ,"B" ,"G4","K" ,"G3","L" ,"R" ,"L" ,"A" ,"A" ,"R" ,"B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"A" ,"A" ,"R" ,"L" ,"R" ,"G4","K" ,"G3","B" ,"B" ,"B" ],
            ["L" ,"G3","G4","A" ,"A" ,"A" ,"G3","G4","R" ,"G1","G2","B" ,"G4","G3","B" ,"G4","G3","B" ,"G1","G2","L" ,"G3","G4","A" ,"A" ,"A" ,"G3","G4","R" ],
            ["B" ,"G1","A" ,"A" ,"A" ,"G2","G1","G2","B" ,"B" ,"B" ,"G4","A" ,"A" ,"K" ,"A" ,"A" ,"G3","B" ,"B" ,"B" ,"G1","G2","G1","A" ,"A" ,"A" ,"G2","B" ],
            ["B" ,"L" ,"A" ,"A" ,"A" ,"G3","B" ,"B" ,"G4","G3","B" ,"G1","A" ,"A" ,"A" ,"A" ,"A" ,"G2","B" ,"G4","G3","B" ,"B" ,"G4","A" ,"A" ,"A" ,"R" ,"B" ],
            ["B" ,"G4","A" ,"A" ,"A" ,"A" ,"G3","L" ,"A" ,"A" ,"K" ,"G3"," " ," " ," " ," " ," " ,"G4","K" ,"A" ,"A" ,"R" ,"G4","A" ,"A" ,"A" ,"A" ,"G3","B" ],
            ["L1","A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"O" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"O" ,"A" ,"A" ,"A" ,"A" ,"A" ,"A" ,"R1"],
            ["B" ,"G1","A" ,"A" ,"A" ,"A" ,"G2","L" ,"A" ,"A" ,"P" ,"G2"," " ," " ," " ," " ," " ,"G1","P" ,"A" ,"A" ,"R" ,"G1","A" ,"A" ,"A" ,"A" ,"G2","B" ],
            ["B" ,"L" ,"A" ,"A" ,"A" ,"G2","B" ,"B" ,"G1","G2","B" ,"G4","A" ,"A" ,"A" ,"A" ,"A" ,"G3","B" ,"G1","G2","B" ,"B" ,"G1","A" ,"A" ,"A" ,"R" ,"B" ],
            ["B" ,"G4","A" ,"A" ,"A" ,"G3","G4","G3","B" ,"B" ,"B" ,"G1","A" ,"A" ,"P" ,"A" ,"A" ,"G2","B" ,"B" ,"B" ,"G4","G3","G4","A" ,"A" ,"A" ,"G3","B" ],
            ["L" ,"G2","G1","A" ,"A" ,"A" ,"G2","G1","R" ,"G4","G3","B" ,"G1","G2","B" ,"G1","G2","B" ,"G4","G3","L" ,"G2","G1","A" ,"A" ,"A" ,"G2","G1","R" ],
            ["B" ,"B" ,"B" ,"G1","P" ,"G2","L" ,"R" ,"L" ,"A" ,"A" ,"R" ,"B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"A" ,"A" ,"R" ,"L" ,"R" ,"G1","P" ,"G2","B" ,"B" ,"B" ],
            ["B" ,"L" ,"G3","B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"A" ,"A" ,"R" ,"B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"A" ,"A" ,"R" ,"B" ,"B" ,"B" ,"B" ,"B" ,"G4","R" ,"B" ],
            ["B" ,"L" ,"A" ,"G3","B" ,"B" ,"B" ,"B" ,"G4","A" ,"A" ,"G3","B" ,"B" ,"B" ,"B" ,"B" ,"G4","A" ,"A" ,"G3","B" ,"B" ,"B" ,"B" ,"G4","A" ,"R" ,"B" ],
            ["B" ,"G4","A" ,"A" ,"G3","B" ,"B" ,"G4","A" ,"G2","G1","P" ,"K" ,"G3","B" ,"G4","K" ,"P" ,"G2","G1","A" ,"G3","B" ,"B" ,"G4","A" ,"A" ,"G3","B" ],
            ["G4","A" ,"A" ,"A" ,"A" ,"G3","G4","P" ,"G2","B" ,"B" ,"B" ,"G1","A" ,"O" ,"A" ,"G2","B" ,"B" ,"B" ,"G1","P" ,"G3","G4","A" ,"A" ,"A" ,"A" ,"G3"],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"B" ,"B" ,"B" ,"B" ,"L" ,"G2","B" ,"G1","R" ,"B" ,"B" ,"B" ,"B" ,"B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"G4","G3","B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"B" ,"G4","G3","B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"L" ,"A" ,"A" ,"G3","L" ,"G3","B" ,"B" ,"B" ,"G4","R" ,"G4","A" ,"A" ,"R" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"G1","A" ,"A" ,"K" ,"A" ,"G3","B" ,"G4","A" ,"K" ,"A" ,"A" ,"G2","B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"B" ,"G4","A" ,"A" ,"A" ,"A" ,"P" ,"O" ,"P" ,"A" ,"A" ,"A" ,"A" ,"G3","B" ," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"G4","A" ,"A" ,"A" ,"A" ,"A" ,"G3","K1","G4","A" ,"A" ,"A" ,"A" ,"A" ,"G3"," " ," " ," " ," " ," " ," " ," " ],
            [" " ," " ," " ," " ," " ," " ," " ,"P" ,"P" ,"P" ,"P" ,"P" ,"P" ,"P" ,"B" ,"P" ,"P" ,"P" ,"P" ,"P" ,"P" ,"P" ," " ," " ," " ," " ," " ," " ," " ]
        ],
        this.points             = [
            [0,0,0,0,0,0,0,7,1,1,1,1,1,1,1,1,1,1,1,1,1,7,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [7,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,7],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,7,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [7,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,7],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,7,1,1,1,1,1,1,1,1,1,1,1,1,1,7,0,0,0,0,0,0,0]
        ]
        this.wayToPrison        = [
            [99,99,99,99,99,99,99,36,37,38,39,40,41,42,43,42,41,40,39,38,37,36,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,33,47,47,46,45,44,43,42,43,44,45,46,47,47,33,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,32,46,45,44,43,44,43,41,43,44,43,44,45,46,32,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,31,32,33,34,42,41,42,40,42,41,42,34,33,32,31,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,30,31,30,35,42,40,41,38,41,40,42,35,30,31,30,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,29,30,29,36,41,39,40,37,40,39,41,36,29,30,29,99,99,99,99,99,99,99],
            [22,23,24,25,26,27,27,28,29,28,37,40,38,37,36,37,38,40,37,28,29,28,27,27,26,25,24,23,22],
            [21,22,23,24,25,28,26,25,26,27,38,39,40,41,35,41,40,39,38,27,26,25,26,28,25,24,23,22,21],
            [20,21,22,23,26,29,25,24,23,24,25,26,41,42,34,42,41,26,25,24,23,24,25,29,26,23,22,21,20],
            [19,20,21,24,27,28,24,22,23,22,23,24,25,42,43,42,25,24,23,22,23,22,24,28,27,24,21,20,19],
            [18,19,22,25,26,27,23,22,21,22,23,24,43,44,32,44,43,24,23,22,21,22,23,27,26,25,22,19,18],
            [17,18,23,24,25,25,24,21,20,14,13,26,44,45,31,45,44,26,13,14,20,21,24,25,25,24,23,18,17],
            [16,19,20,21,22,23,10,9 ,19,16,12,27,28,29,30,29,28,27,12,16,19,9 ,10,23,22,21,20,19,18],
            [15,18,19,20,21,22,11,8 ,18,17,11,12,13,14,15,14,13,12,11,17,18,8 ,11,22,21,20,19,18,15],
            [14,17,16,15,14,13,12,7 ,8 ,9 ,10,11,99,99,99,99,99,11,10,9 ,8 ,7 ,12,13,14,15,16,17,14],
            [13,12,11,10,9 ,8 ,7 ,6 ,5 ,4 ,3 ,2 ,1 ,1 ,1 ,1 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10,11,12,13],
            [14,17,16,15,14,13,12,7 ,8 ,9 ,10,11,0 ,0 ,0 ,0 ,0 ,11,10,9 ,8 ,7 ,12,13,14,15,16,17,14],
            [15,18,19,20,21,22,11,8 ,18,17,11,12,13,14,15,14,13,12,11,17,18,8 ,11,22,21,20,19,18,15],
            [16,19,20,21,22,23,10,9 ,19,16,12,27,28,29,30,29,28,27,12,16,19,9 ,10,23,22,21,20,19,18],
            [17,18,23,24,25,25,24,21,20,14,13,26,44,45,31,45,44,26,13,14,20,21,24,25,25,24,23,18,17],
            [18,19,22,25,26,27,23,22,21,22,23,24,43,44,32,44,43,24,23,22,21,22,23,27,26,25,22,19,18],
            [19,20,21,24,27,28,24,22,23,22,23,24,25,42,43,42,25,24,23,22,23,22,24,28,27,24,21,20,19],
            [20,21,22,23,26,29,25,24,23,24,25,26,41,42,34,42,41,26,25,24,23,24,25,29,26,23,22,21,20],
            [21,22,23,24,25,28,26,25,26,27,38,39,40,41,35,41,40,39,38,27,26,25,26,28,25,24,23,22,21],
            [22,23,24,25,26,27,27,28,29,28,37,40,38,37,36,37,38,40,37,28,29,28,27,27,26,25,24,23,22],
            [99,99,99,99,99,99,99,29,30,29,36,41,39,40,37,40,39,41,36,29,30,29,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,30,31,30,35,42,40,41,38,41,40,42,35,30,31,30,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,31,32,33,34,42,41,42,40,42,41,42,34,33,32,31,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,32,46,45,44,43,44,43,41,43,44,43,44,45,46,32,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,33,47,47,46,45,44,43,42,43,44,45,46,47,47,33,99,99,99,99,99,99,99],
            [99,99,99,99,99,99,99,36,37,38,39,40,41,42,43,42,41,40,39,38,37,36,99,99,99,99,99,99,99]
        ]
    }
    changeDirection(){
        if (this.movedX == 0 && this.movedY == 0){
            if ((this.wishedDirection == 'Right') && (this.grid[this.y][this.x] != "R") && (this.grid[this.y][this.x] != "G2") && (this.grid[this.y][this.x] != "G3") && (this.grid[this.y][this.x] != "B")){
                this.currentDirection = this.wishedDirection
            }else if ((this.wishedDirection == "Left") && (this.grid[this.y][this.x] != "L") && (this.grid[this.y][this.x] != "G1") && (this.grid[this.y][this.x] != "G4") && (this.grid[this.y][this.x] != "B")){
                this.currentDirection = this.wishedDirection
            }else if ((this.wishedDirection == "Down") && (this.grid[this.y][this.x] != "A") && (this.grid[this.y][this.x] != "G3") && (this.grid[this.y][this.x] != "G4") && (this.grid[this.y][this.x] != "K")){
                this.currentDirection = this.wishedDirection
            }else if ((this.wishedDirection == "Up") && (this.grid[this.y][this.x] != "A") && (this.grid[this.y][this.x] != "G1") && (this.grid[this.y][this.x] != "G2") && (this.grid[this.y][this.x] != "P")){
                this.currentDirection = this.wishedDirection
            }
        }
    }
    canMove(){
        if (
        ((this.currentDirection == "Right") && (this.grid[this.y][this.x] != "R") && (this.grid[this.y][this.x] != "G2") && (this.grid[this.y][this.x] != "G3") && (this.grid[this.y][this.x] != "B"))
        ||
        ((this.currentDirection == "Left") && (this.grid[this.y][this.x] != "L") && (this.grid[this.y][this.x] != "G1") && (this.grid[this.y][this.x] != "G4") && (this.grid[this.y][this.x] != "B"))
        ||
        ((this.currentDirection == "Down") && (this.grid[this.y][this.x] != "A") && (this.grid[this.y][this.x] != "G3") && (this.grid[this.y][this.x] != "G4") && (this.grid[this.y][this.x] != "K"))
        ||
        ((this.currentDirection == "Up") && (this.grid[this.y][this.x] != "A") && (this.grid[this.y][this.x] != "G1") && (this.grid[this.y][this.x] != "G2") && (this.grid[this.y][this.x] != "P"))
        ){
            return true
        }
    }
    changeX(){
        let value = 0
        if (this.movedX >= this.len){
            value = this.movedX - this.len//from cam remove this value
            this.x += 1
            this.movedX = 0
        }else if (this.movedX <= -this.len){
            value = this.movedX + this.len
            this.x -= 1
            this.movedX = 0
        }
        this.changeDirection()
        return value
    }
    changeY(){
        let value = 0
        if (this.movedY == this.len){
            value = this.movedY - this.len
            this.y += 1
            this.movedY = 0
        }else if (this.movedY == -this.len){
            value = this.movedY + this.len
            this.y -= 1
            this.movedY = 0
        }
        this.changeDirection()
        return value
    }

}
class Item{
    constructor(width, height, x, y){
        this.width  = width
        this.height = height
        this.x      = x
        this.y      = y
        this.obj    = ''
    }
}

const width     = window.innerWidth
const height    = window.innerHeight
